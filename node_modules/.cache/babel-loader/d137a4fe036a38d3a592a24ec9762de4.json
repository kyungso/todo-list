{"ast":null,"code":"var _jsxFileName = \"/Users/ksjung/frontend_study/velopert_book/todo-list/src/components/App.js\";\nimport React, { Component } from 'react';\nimport PageTemplate from './PageTemplate';\nimport TodoInput from './TodoInput/TodoInput';\nimport TodoList from './TodoList/TodoList';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input: '',\n      todos: [{\n        id: 0,\n        text: '리액트 공부하기',\n        done: true\n      }, {\n        id: 1,\n        text: '컴포넌트 스타일링 하기',\n        done: false\n      }]\n    };\n    this.id = 1;\n\n    this.getId = () => {\n      return ++this.id;\n    };\n\n    this.handleChange = e => {\n      const value = e.target.value;\n      this.setState({\n        input: value\n      });\n    };\n\n    this.handleInsert = () => {\n      const _this$state = this.state,\n            todos = _this$state.todos,\n            input = _this$state.input;\n      const newTodo = {\n        text: input,\n        done: false,\n        id: this.getId()\n      };\n      this.setState({\n        todos: [...todos, newTodo],\n        input: ''\n      });\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          input = _this$state2.input,\n          todos = _this$state2.todos;\n    const handleChange = this.handleChange;\n    return React.createElement(PageTemplate, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(TodoInput, {\n      value: input,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(TodoList, {\n      todos: todos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ksjung/frontend_study/velopert_book/todo-list/src/components/App.js"],"names":["React","Component","PageTemplate","TodoInput","TodoList","App","state","input","todos","id","text","done","getId","handleChange","e","value","target","setState","handleInsert","newTodo","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBK,KADwB,GAChB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,KAAK,EAAE,CACH;AAAEC,QAAAA,EAAE,EAAC,CAAL;AAAQC,QAAAA,IAAI,EAAE,UAAd;AAA0BC,QAAAA,IAAI,EAAE;AAAhC,OADG,EAEH;AAAEF,QAAAA,EAAE,EAAC,CAAL;AAAQC,QAAAA,IAAI,EAAE,cAAd;AAA8BC,QAAAA,IAAI,EAAE;AAApC,OAFG;AAFH,KADgB;AAAA,SASxBF,EATwB,GASnB,CATmB;;AAAA,SAUxBG,KAVwB,GAUhB,MAAM;AACV,aAAO,EAAE,KAAKH,EAAd;AACH,KAZuB;;AAAA,SAcxBI,YAdwB,GAcRC,CAAD,IAAO;AAAA,YACVC,KADU,GACAD,CAAC,CAACE,MADF,CACVD,KADU;AAElB,WAAKE,QAAL,CAAc;AACVV,QAAAA,KAAK,EAAEQ;AADG,OAAd;AAGH,KAnBuB;;AAAA,SAqBxBG,YArBwB,GAqBT,MAAM;AAAA,0BACQ,KAAKZ,KADb;AAAA,YACTE,KADS,eACTA,KADS;AAAA,YACFD,KADE,eACFA,KADE;AAGjB,YAAMY,OAAO,GAAG;AACZT,QAAAA,IAAI,EAAEH,KADM;AAEZI,QAAAA,IAAI,EAAE,KAFM;AAGZF,QAAAA,EAAE,EAAE,KAAKG,KAAL;AAHQ,OAAhB;AAMA,WAAKK,QAAL,CAAc;AACVT,QAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ,EAAWW,OAAX,CADG;AAEVZ,QAAAA,KAAK,EAAE;AAFG,OAAd;AAIH,KAlCuB;AAAA;;AAmCxBa,EAAAA,MAAM,GAAG;AAAA,yBACoB,KAAKd,KADzB;AAAA,UACGC,KADH,gBACGA,KADH;AAAA,UACUC,KADV,gBACUA,KADV;AAAA,UAEGK,YAFH,GAEoB,IAFpB,CAEGA,YAFH;AAIL,WACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEN,KAAlB;AAAyB,MAAA,QAAQ,EAAEM,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA7CuB;;AAgD5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport PageTemplate from './PageTemplate';\nimport TodoInput from './TodoInput/TodoInput';\nimport TodoList from './TodoList/TodoList';\n\nclass App extends Component {\n    state = {\n        input: '',\n        todos: [\n            { id:0, text: '리액트 공부하기', done: true },\n            { id:1, text: '컴포넌트 스타일링 하기', done: false }\n        ]\n    }\n\n    id = 1\n    getId = () => {\n        return ++this.id;\n    }\n\n    handleChange = (e) => {\n        const { value } = e.target;\n        this.setState({\n            input: value\n        });\n    }\n\n    handleInsert = () => {\n        const { todos, input } = this.state;\n\n        const newTodo = {\n            text: input,\n            done: false,\n            id: this.getId()\n        };\n\n        this.setState({\n            todos: [...todos, newTodo],\n            input: ''\n        })\n    }\n    render() {\n        const { input, todos } = this.state;\n        const { handleChange } = this;\n\n        return (\n            <PageTemplate>\n                <TodoInput value={input} onChange={handleChange} />\n                <TodoList todos={todos}/>\n            </PageTemplate>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
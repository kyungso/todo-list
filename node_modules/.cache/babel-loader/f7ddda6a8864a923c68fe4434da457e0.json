{"ast":null,"code":"var _jsxFileName = \"/Users/ksjung/frontend_study/velopert_book/todo-list/src/containers/TodoInputContainer.js\";\nimport React, { Component } from 'react';\nimport TodoInput from '../components/TodoInput';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as inputActions from '../modules/input';\nimport * as todosActions from '../modules/todos';\n\nclass TodoInputContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.id = 0;\n\n    this.getId = () => {\n      return ++this.id;\n    };\n\n    this.handleChange = e => {\n      const value = e.target.value;\n      const InputActions = this.props.InputActions;\n      InputActions.setInput(value);\n    };\n\n    this.handleInsert = () => {\n      const _this$props = this.props,\n            InputActions = _this$props.InputActions,\n            TodosActions = _this$props.TodosActions,\n            value = _this$props.value;\n      const todo = {\n        id: this.getId(),\n        text: value,\n        done: false\n      };\n      TodosActions.insert(todo);\n      InputActions.setInput('');\n    };\n  }\n\n  render() {\n    const value = this.props.value;\n    const handleChange = this.handleChange,\n          handleInsert = this.handleInsert;\n    return React.createElement(TodoInput, {\n      onChange: handleChange,\n      onInsert: handleInsert,\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  }\n\n}\n/* mapStateToProps와 mapDispatchToProps 함수에 대한 레퍼런스를 \n   따로 만들지 않고, 그 내부에 바로 정의했습니다.\n*/\n\n\nexport default connect(state => ({\n  value: state.input.get('value')\n}), dispatch => ({\n  /*\n    bindActionCreators를 사용하면, 자동으로 다음 작업들을 합니다.\n    {\n        actionCreator: (...params) => dispatch(actionCreator(...params))\n    }\n    그래서 일일이 dispatch할 필요가 없습니다.\n    예를 들어, InputActions에는 \n    InputActions: {\n        setInput: (value) => dispatch(inputActions.setInput(value))\n    }\n    나중에 이를 호출할 때는 this.props.InputActions.setInput을 호출하면 됩니다.\n  */\n  InputActions: bindActionCreators(inputActions, dispatch),\n  TodosActions: bindActionCreators(todosActions, dispatch)\n}))(TodoInputContainer);","map":{"version":3,"sources":["/Users/ksjung/frontend_study/velopert_book/todo-list/src/containers/TodoInputContainer.js"],"names":["React","Component","TodoInput","connect","bindActionCreators","inputActions","todosActions","TodoInputContainer","id","getId","handleChange","e","value","target","InputActions","props","setInput","handleInsert","TodosActions","todo","text","done","insert","render","state","input","get","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,OAAO,KAAKC,YAAZ,MAA8B,kBAA9B;AACA,OAAO,KAAKC,YAAZ,MAA8B,kBAA9B;;AAEA,MAAMC,kBAAN,SAAiCN,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACvCO,EADuC,GAClC,CADkC;;AAAA,SAEvCC,KAFuC,GAE/B,MAAM;AACV,aAAO,EAAE,KAAKD,EAAd;AACH,KAJsC;;AAAA,SAMvCE,YANuC,GAMvBC,CAAD,IAAO;AAAA,YACVC,KADU,GACAD,CAAC,CAACE,MADF,CACVD,KADU;AAAA,YAEVE,YAFU,GAEO,KAAKC,KAFZ,CAEVD,YAFU;AAGlBA,MAAAA,YAAY,CAACE,QAAb,CAAsBJ,KAAtB;AACH,KAVsC;;AAAA,SAYvCK,YAZuC,GAYxB,MAAM;AAAA,0BAC6B,KAAKF,KADlC;AAAA,YACTD,YADS,eACTA,YADS;AAAA,YACKI,YADL,eACKA,YADL;AAAA,YACmBN,KADnB,eACmBA,KADnB;AAEjB,YAAMO,IAAI,GAAG;AACTX,QAAAA,EAAE,EAAE,KAAKC,KAAL,EADK;AAETW,QAAAA,IAAI,EAAER,KAFG;AAGTS,QAAAA,IAAI,EAAE;AAHG,OAAb;AAKAH,MAAAA,YAAY,CAACI,MAAb,CAAoBH,IAApB;AACAL,MAAAA,YAAY,CAACE,QAAb,CAAsB,EAAtB;AACH,KArBsC;AAAA;;AAuBvCO,EAAAA,MAAM,GAAG;AAAA,UACGX,KADH,GACa,KAAKG,KADlB,CACGH,KADH;AAAA,UAEGF,YAFH,GAEkC,IAFlC,CAEGA,YAFH;AAAA,UAEiBO,YAFjB,GAEkC,IAFlC,CAEiBA,YAFjB;AAGL,WACI,oBAAC,SAAD;AACI,MAAA,QAAQ,EAAEP,YADd;AAEI,MAAA,QAAQ,EAAEO,YAFd;AAGI,MAAA,KAAK,EAAEL,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH;;AAjCsC;AAoC3C;;;;;AAIA,eAAeT,OAAO,CACjBqB,KAAD,KAAY;AACRZ,EAAAA,KAAK,EAAEY,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,OAAhB;AADC,CAAZ,CADkB,EAIjBC,QAAD,KAAe;AACX;;;;;;;;;;;;AAYAb,EAAAA,YAAY,EAAEV,kBAAkB,CAACC,YAAD,EAAesB,QAAf,CAbrB;AAcXT,EAAAA,YAAY,EAAEd,kBAAkB,CAACE,YAAD,EAAeqB,QAAf;AAdrB,CAAf,CAJkB,CAAP,CAoBbpB,kBApBa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport TodoInput from '../components/TodoInput';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport * as inputActions from '../modules/input';\nimport * as todosActions from '../modules/todos';\n\nclass TodoInputContainer extends Component {\n    id = 0\n    getId = () => {\n        return ++this.id;\n    }\n\n    handleChange = (e) => {\n        const { value } = e.target;\n        const { InputActions } = this.props;\n        InputActions.setInput(value);\n    }\n\n    handleInsert = () => {\n        const { InputActions, TodosActions, value } = this.props;\n        const todo = {\n            id: this.getId(),\n            text: value,\n            done: false\n        };\n        TodosActions.insert(todo);\n        InputActions.setInput('');\n    }\n\n    render() {\n        const { value } = this.props;\n        const { handleChange, handleInsert } = this;\n        return (\n            <TodoInput\n                onChange={handleChange}\n                onInsert={handleInsert}\n                value={value}\n            />\n        );\n    }\n}\n\n/* mapStateToProps와 mapDispatchToProps 함수에 대한 레퍼런스를 \n   따로 만들지 않고, 그 내부에 바로 정의했습니다.\n*/\n\nexport default connect(\n    (state) => ({\n        value: state.input.get('value')\n    }),\n    (dispatch) => ({\n        /*\n          bindActionCreators를 사용하면, 자동으로 다음 작업들을 합니다.\n          {\n              actionCreator: (...params) => dispatch(actionCreator(...params))\n          }\n          그래서 일일이 dispatch할 필요가 없습니다.\n          예를 들어, InputActions에는 \n          InputActions: {\n              setInput: (value) => dispatch(inputActions.setInput(value))\n          }\n          나중에 이를 호출할 때는 this.props.InputActions.setInput을 호출하면 됩니다.\n        */\n        InputActions: bindActionCreators(inputActions, dispatch),\n        TodosActions: bindActionCreators(todosActions, dispatch)\n    })\n)(TodoInputContainer);"]},"metadata":{},"sourceType":"module"}